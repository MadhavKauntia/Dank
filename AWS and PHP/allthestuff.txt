// A C++ program for Dijkstra's single source shortest path algorithm. 
// The program is for adjacency matrix representation of the graph 
   
#include
<stdio.h>
 #include
 <limits.h>
  // Number of vertices in the graph 
#define V 9 
   
// A utility function to find the vertex with minimum distance value, from 
// the set of vertices not yet included in shortest path tree 
int minDistance(int dist[], bool sptSet[]) 
{ 
   // Initialize min value 
   int min = INT_MAX, min_index; 
   
   for (int v = 0; v &lt; V; v++) 
     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min) 
         min = dist[v], min_index = v; 
   
   return min_index; 
} 
   
// A utility function to print the constructed distance array 
int printSolution(int dist[], int n) 
{ 
   printf("Vertex   Distance from Source\n"); 
   for (int i = 0; i &lt; V; i++) 
      printf("%d tt %d\n", i, dist[i]); 
} 
   
// Function that implements Dijkstra's single source shortest path algorithm 
// for a graph represented using adjacency matrix representation 
void dijkstra(int graph[V][V], int src) 
{ 
     int dist[V];     // The output array.  dist[i] will hold the shortest 
                      // distance from src to i 
   
     bool sptSet[V]; // sptSet[i] will true if vertex i is included in shortest 
                     // path tree or shortest distance from src to i is finalized 
   
     // Initialize all distances as INFINITE and stpSet[] as false 
     for (int i = 0; i &lt; V; i++) 
        dist[i] = INT_MAX, sptSet[i] = false; 
   
     // Distance of source vertex from itself is always 0 
     dist[src] = 0; 
   
     // Find shortest path for all vertices 
     for (int count = 0; count &lt; V-1; count++) 
     { 
       // Pick the minimum distance vertex from the set of vertices not 
       // yet processed. u is always equal to src in the first iteration. 
       int u = minDistance(dist, sptSet); 
   
       // Mark the picked vertex as processed 
       sptSet[u] = true; 
   
       // Update dist value of the adjacent vertices of the picked vertex. 
       for (int v = 0; v &lt; V; v++) 
   
         // Update dist[v] only if is not in sptSet, there is an edge from  
         // u to v, and total weight of path from src to  v through u is  
         // smaller than current value of dist[v] 
         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX  
                                       &amp;&amp; dist[u]+graph[u][v] &lt; dist[v]) 
            dist[v] = dist[u] + graph[u][v]; 
     } 
   
     // print the constructed distance array 
     printSolution(dist, V); 
} 
   
// driver program to test above function 
int main() 
{ 
   /* Let us create the example graph discussed above */
   int graph[V][V] = {{0, 4, 0, 0, 0, 0, 0, 8, 0}, 
                      {4, 0, 8, 0, 0, 0, 0, 11, 0}, 
                      {0, 8, 0, 7, 0, 4, 0, 0, 2}, 
                      {0, 0, 7, 0, 9, 14, 0, 0, 0}, 
                      {0, 0, 0, 9, 0, 10, 0, 0, 0}, 
                      {0, 0, 4, 14, 10, 0, 2, 0, 0}, 
                      {0, 0, 0, 0, 0, 2, 0, 1, 6}, 
                      {8, 11, 0, 0, 0, 0, 1, 0, 7}, 
                      {0, 0, 2, 0, 0, 0, 6, 7, 0} 
                     }; 
   
    dijkstra(graph, 0); 
   
    return 0; 
} 
@@@###second editor
uuuuuBreakpoint 74, main () at h.cpp:77`!`!77	{`!`!graph = {{0, 0, 1700966438, 0, -134223208, 32767, -7160, 32767, -7104}, {32767, -134224112, 32767, 0, 0, -136445457, 32767, 0, 0}, {-7104, 32767, 0, 0, 0, 0, 0, 0, -134224112}, {32767, -138840185, 32767, 896, 0, -7328, 32767, -7312, 32767}, {-134223208, 32767, 0, 0, 0, 0, 0, 0, -1}, {0, 0, 0, -134241688, 32767, -134224112, 32767, 0, 0}, {0, 0, 0, 0, 1970169159, 0, 9, 0, -136481184}, {32767, -7144, 32767, 15775231, 0, 1, 0, 1431652925, 21845}, {-136423008, 32767, 0, 0, 1431652848, 21845, 1431651824, 21845, -6944}}`!`!@@@@@@#####`!`!Breakpoint 78, main () at h.cpp:79`!`!79	   int graph[V][V] = {{0, 4, 0, 0, 0, 0, 0, 8, 0},`!`!graph = {{0, 0, 1700966438, 0, -134223208, 32767, -7160, 32767, -7104}, {32767, -134224112, 32767, 0, 0, -136445457, 32767, 0, 0}, {-7104, 32767, 0, 0, 0, 0, 0, 0, -134224112}, {32767, -138840185, 32767, 896, 0, -7328, 32767, -7312, 32767}, {-134223208, 32767, 0, 0, 0, 0, 0, 0, -1}, {0, 0, 0, -134241688, 32767, -134224112, 32767, 0, 0}, {0, 0, 0, 0, 1970169159, 0, 9, 0, -136481184}, {32767, -7144, 32767, 15775231, 0, 1, 0, 1431652925, 21845}, {-136423008, 32767, 0, 0, 1431652848, 21845, 1431651824, 21845, -6944}}`!`!@@@@@@#####`!`!Breakpoint 80, main () at h.cpp:90`!`!90	    dijkstra(graph, 0);`!`!graph = {{0, 4, 0, 0, 0, 0, 0, 8, 0}, {4, 0, 8, 0, 0, 0, 0, 11, 0}, {0, 8, 0, 7, 0, 4, 0, 0, 2}, {0, 0, 7, 0, 9, 14, 0, 0, 0}, {0, 0, 0, 9, 0, 10, 0, 0, 0}, {0, 0, 4, 14, 10, 0, 2, 0, 0}, {0, 0, 0, 0, 0, 2, 0, 1, 6}, {8, 11, 0, 0, 0, 0, 1, 0, 7}, {0, 0, 2, 0, 0, 0, 6, 7, 0}}`!`!@@@@@@#####`!`!Breakpoint 32, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:36`!`!36	{`!`!dist = {-7312, 32767, 3, 0, -7328, 32767, 0, 0, -134224072}`!`!sptSet = {false, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 37, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:44`!`!44	     for (int i = 0; i &lt; V; i++)`!`!i = 32767`!`!dist = {-7312, 32767, 3, 0, -7328, 32767, 0, 0, -134224072}`!`!sptSet = {false, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 45, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:45`!`!45	        dist[i] = INT_MAX, sptSet[i] = false;`!`!i = 0`!`!dist = {-7312, 32767, 3, 0, -7328, 32767, 0, 0, -134224072}`!`!sptSet = {false, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 45, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:45`!`!45	        dist[i] = INT_MAX, sptSet[i] = false;`!`!i = 1`!`!dist = {2147483647, 32767, 3, 0, -7328, 32767, 0, 0, -134224072}`!`!sptSet = {false, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 45, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:45`!`!45	        dist[i] = INT_MAX, sptSet[i] = false;`!`!i = 2`!`!dist = {2147483647, 2147483647, 3, 0, -7328, 32767, 0, 0, -134224072}`!`!sptSet = {false, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 45, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:45`!`!45	        dist[i] = INT_MAX, sptSet[i] = false;`!`!i = 3`!`!dist = {2147483647, 2147483647, 2147483647, 0, -7328, 32767, 0, 0, -134224072}`!`!sptSet = {false, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 45, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:45`!`!45	        dist[i] = INT_MAX, sptSet[i] = false;`!`!i = 4`!`!dist = {2147483647, 2147483647, 2147483647, 2147483647, -7328, 32767, 0, 0, -134224072}`!`!sptSet = {false, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 45, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:45`!`!45	        dist[i] = INT_MAX, sptSet[i] = false;`!`!i = 5`!`!dist = {2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 32767, 0, 0, -134224072}`!`!sptSet = {false, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 45, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:45`!`!45	        dist[i] = INT_MAX, sptSet[i] = false;`!`!i = 6`!`!dist = {2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 0, 0, -134224072}`!`!sptSet = {false, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 45, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:45`!`!45	        dist[i] = INT_MAX, sptSet[i] = false;`!`!i = 7`!`!dist = {2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 0, -134224072}`!`!sptSet = {false, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 45, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:45`!`!45	        dist[i] = INT_MAX, sptSet[i] = false;`!`!i = 8`!`!dist = {2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, -134224072}`!`!sptSet = {false, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 46, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:48`!`!48	     dist[src] = 0;`!`!dist = {2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647}`!`!sptSet = {false, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 49, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:51`!`!51	     for (int count = 0; count &lt; V-1; count++)`!`!count = -134241920`!`!dist = {0, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647}`!`!sptSet = {false, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 52, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:55`!`!55	       int u = minDistance(dist, sptSet);`!`!u = 2`!`!count = 0`!`!dist = {0, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647}`!`!sptSet = {false, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 1, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:16`!`!16	   int min = INT_MAX, min_index;`!`!min = 32767`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 17, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:18`!`!18	   for (int v = 0; v &lt; V; v++)`!`!v = 0`!`!min = 2147483647`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 0`!`!min = 2147483647`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 20, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:20`!`!20	         min = dist[v], min_index = v;`!`!v = 0`!`!min = 2147483647`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 1`!`!min = 0`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 2`!`!min = 0`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 3`!`!min = 0`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 4`!`!min = 0`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 5`!`!min = 0`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 6`!`!min = 0`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 7`!`!min = 0`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 8`!`!min = 0`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 21, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:22`!`!22	   return min_index;`!`!min = 0`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 23, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:23`!`!23	}`!`!min = 0`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 56, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:58`!`!58	       sptSet[u] = true;`!`!u = 0`!`!count = 0`!`!dist = {0, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647}`!`!sptSet = {false, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 59, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:61`!`!61	       for (int v = 0; v &lt; V; v++)`!`!v = 32767`!`!u = 0`!`!count = 0`!`!dist = {0, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647}`!`!sptSet = {true, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 0`!`!u = 0`!`!count = 0`!`!dist = {0, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647}`!`!sptSet = {true, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 1`!`!u = 0`!`!count = 0`!`!dist = {0, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647}`!`!sptSet = {true, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 67, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:67`!`!67	                                       &amp;&amp; dist[u]+graph[u][v] &lt; dist[v])`!`!v = 1`!`!u = 0`!`!count = 0`!`!dist = {0, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647}`!`!sptSet = {true, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 68, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:68`!`!68	            dist[v] = dist[u] + graph[u][v];`!`!v = 1`!`!u = 0`!`!count = 0`!`!dist = {0, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647}`!`!sptSet = {true, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 2`!`!u = 0`!`!count = 0`!`!dist = {0, 4, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647}`!`!sptSet = {true, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 3`!`!u = 0`!`!count = 0`!`!dist = {0, 4, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647}`!`!sptSet = {true, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 4`!`!u = 0`!`!count = 0`!`!dist = {0, 4, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647}`!`!sptSet = {true, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 5`!`!u = 0`!`!count = 0`!`!dist = {0, 4, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647}`!`!sptSet = {true, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 6`!`!u = 0`!`!count = 0`!`!dist = {0, 4, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647}`!`!sptSet = {true, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 7`!`!u = 0`!`!count = 0`!`!dist = {0, 4, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647}`!`!sptSet = {true, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 67, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:67`!`!67	                                       &amp;&amp; dist[u]+graph[u][v] &lt; dist[v])`!`!v = 7`!`!u = 0`!`!count = 0`!`!dist = {0, 4, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647}`!`!sptSet = {true, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 68, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:68`!`!68	            dist[v] = dist[u] + graph[u][v];`!`!v = 7`!`!u = 0`!`!count = 0`!`!dist = {0, 4, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647}`!`!sptSet = {true, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 8`!`!u = 0`!`!count = 0`!`!dist = {0, 4, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 52, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:55`!`!55	       int u = minDistance(dist, sptSet);`!`!u = 0`!`!count = 1`!`!dist = {0, 4, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 1, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:16`!`!16	   int min = INT_MAX, min_index;`!`!min = 0`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 17, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:18`!`!18	   for (int v = 0; v &lt; V; v++)`!`!v = 9`!`!min = 2147483647`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 0`!`!min = 2147483647`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 1`!`!min = 2147483647`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 20, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:20`!`!20	         min = dist[v], min_index = v;`!`!v = 1`!`!min = 2147483647`!`!min_index = 0`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 2`!`!min = 4`!`!min_index = 1`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 3`!`!min = 4`!`!min_index = 1`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 4`!`!min = 4`!`!min_index = 1`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 5`!`!min = 4`!`!min_index = 1`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 6`!`!min = 4`!`!min_index = 1`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 7`!`!min = 4`!`!min_index = 1`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 8`!`!min = 4`!`!min_index = 1`!`!@@@@@@#####`!`!Breakpoint 21, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:22`!`!22	   return min_index;`!`!min = 4`!`!min_index = 1`!`!@@@@@@#####`!`!Breakpoint 23, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:23`!`!23	}`!`!min = 4`!`!min_index = 1`!`!@@@@@@#####`!`!Breakpoint 56, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:58`!`!58	       sptSet[u] = true;`!`!u = 1`!`!count = 1`!`!dist = {0, 4, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, false, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 59, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:61`!`!61	       for (int v = 0; v &lt; V; v++)`!`!v = 9`!`!u = 1`!`!count = 1`!`!dist = {0, 4, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 0`!`!u = 1`!`!count = 1`!`!dist = {0, 4, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 1`!`!u = 1`!`!count = 1`!`!dist = {0, 4, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 2`!`!u = 1`!`!count = 1`!`!dist = {0, 4, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 67, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:67`!`!67	                                       &amp;&amp; dist[u]+graph[u][v] &lt; dist[v])`!`!v = 2`!`!u = 1`!`!count = 1`!`!dist = {0, 4, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 68, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:68`!`!68	            dist[v] = dist[u] + graph[u][v];`!`!v = 2`!`!u = 1`!`!count = 1`!`!dist = {0, 4, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 3`!`!u = 1`!`!count = 1`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 4`!`!u = 1`!`!count = 1`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 5`!`!u = 1`!`!count = 1`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 6`!`!u = 1`!`!count = 1`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 7`!`!u = 1`!`!count = 1`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 67, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:67`!`!67	                                       &amp;&amp; dist[u]+graph[u][v] &lt; dist[v])`!`!v = 7`!`!u = 1`!`!count = 1`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 8`!`!u = 1`!`!count = 1`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 52, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:55`!`!55	       int u = minDistance(dist, sptSet);`!`!u = 1`!`!count = 2`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 1, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:16`!`!16	   int min = INT_MAX, min_index;`!`!min = 4`!`!min_index = 1`!`!@@@@@@#####`!`!Breakpoint 17, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:18`!`!18	   for (int v = 0; v &lt; V; v++)`!`!v = 9`!`!min = 2147483647`!`!min_index = 1`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 0`!`!min = 2147483647`!`!min_index = 1`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 1`!`!min = 2147483647`!`!min_index = 1`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 2`!`!min = 2147483647`!`!min_index = 1`!`!@@@@@@#####`!`!Breakpoint 20, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:20`!`!20	         min = dist[v], min_index = v;`!`!v = 2`!`!min = 2147483647`!`!min_index = 1`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 3`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 4`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 5`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 6`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 7`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 20, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:20`!`!20	         min = dist[v], min_index = v;`!`!v = 7`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 8`!`!min = 8`!`!min_index = 7`!`!@@@@@@#####`!`!Breakpoint 21, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:22`!`!22	   return min_index;`!`!min = 8`!`!min_index = 7`!`!@@@@@@#####`!`!Breakpoint 23, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:23`!`!23	}`!`!min = 8`!`!min_index = 7`!`!@@@@@@#####`!`!Breakpoint 56, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:58`!`!58	       sptSet[u] = true;`!`!u = 7`!`!count = 2`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, false, false}`!`!@@@@@@#####`!`!Breakpoint 59, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:61`!`!61	       for (int v = 0; v &lt; V; v++)`!`!v = 9`!`!u = 7`!`!count = 2`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 0`!`!u = 7`!`!count = 2`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 1`!`!u = 7`!`!count = 2`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 2`!`!u = 7`!`!count = 2`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 3`!`!u = 7`!`!count = 2`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 4`!`!u = 7`!`!count = 2`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 5`!`!u = 7`!`!count = 2`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 6`!`!u = 7`!`!count = 2`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, true, false}`!`!@@@@@@#####`!`!Breakpoint 67, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:67`!`!67	                                       &amp;&amp; dist[u]+graph[u][v] &lt; dist[v])`!`!v = 6`!`!u = 7`!`!count = 2`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, true, false}`!`!@@@@@@#####`!`!Breakpoint 68, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:68`!`!68	            dist[v] = dist[u] + graph[u][v];`!`!v = 6`!`!u = 7`!`!count = 2`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 2147483647, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 7`!`!u = 7`!`!count = 2`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 9, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 8`!`!u = 7`!`!count = 2`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 9, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, true, false}`!`!@@@@@@#####`!`!Breakpoint 67, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:67`!`!67	                                       &amp;&amp; dist[u]+graph[u][v] &lt; dist[v])`!`!v = 8`!`!u = 7`!`!count = 2`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 9, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, true, false}`!`!@@@@@@#####`!`!Breakpoint 68, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:68`!`!68	            dist[v] = dist[u] + graph[u][v];`!`!v = 8`!`!u = 7`!`!count = 2`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 9, 8, 2147483647}`!`!sptSet = {true, true, false, false, false, false, false, true, false}`!`!@@@@@@#####`!`!Breakpoint 52, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:55`!`!55	       int u = minDistance(dist, sptSet);`!`!u = 7`!`!count = 3`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, false, false, true, false}`!`!@@@@@@#####`!`!Breakpoint 1, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:16`!`!16	   int min = INT_MAX, min_index;`!`!min = 8`!`!min_index = 7`!`!@@@@@@#####`!`!Breakpoint 17, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:18`!`!18	   for (int v = 0; v &lt; V; v++)`!`!v = 9`!`!min = 2147483647`!`!min_index = 7`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 0`!`!min = 2147483647`!`!min_index = 7`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 1`!`!min = 2147483647`!`!min_index = 7`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 2`!`!min = 2147483647`!`!min_index = 7`!`!@@@@@@#####`!`!Breakpoint 20, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:20`!`!20	         min = dist[v], min_index = v;`!`!v = 2`!`!min = 2147483647`!`!min_index = 7`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 3`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 4`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 5`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 6`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 20, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:20`!`!20	         min = dist[v], min_index = v;`!`!v = 6`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 7`!`!min = 9`!`!min_index = 6`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 8`!`!min = 9`!`!min_index = 6`!`!@@@@@@#####`!`!Breakpoint 21, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:22`!`!22	   return min_index;`!`!min = 9`!`!min_index = 6`!`!@@@@@@#####`!`!Breakpoint 23, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:23`!`!23	}`!`!min = 9`!`!min_index = 6`!`!@@@@@@#####`!`!Breakpoint 56, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:58`!`!58	       sptSet[u] = true;`!`!u = 6`!`!count = 3`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, false, false, true, false}`!`!@@@@@@#####`!`!Breakpoint 59, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:61`!`!61	       for (int v = 0; v &lt; V; v++)`!`!v = 9`!`!u = 6`!`!count = 3`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, false, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 0`!`!u = 6`!`!count = 3`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, false, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 1`!`!u = 6`!`!count = 3`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, false, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 2`!`!u = 6`!`!count = 3`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, false, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 3`!`!u = 6`!`!count = 3`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, false, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 4`!`!u = 6`!`!count = 3`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, false, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 5`!`!u = 6`!`!count = 3`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, false, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 67, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:67`!`!67	                                       &amp;&amp; dist[u]+graph[u][v] &lt; dist[v])`!`!v = 5`!`!u = 6`!`!count = 3`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, false, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 68, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:68`!`!68	            dist[v] = dist[u] + graph[u][v];`!`!v = 5`!`!u = 6`!`!count = 3`!`!dist = {0, 4, 12, 2147483647, 2147483647, 2147483647, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, false, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 6`!`!u = 6`!`!count = 3`!`!dist = {0, 4, 12, 2147483647, 2147483647, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, false, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 7`!`!u = 6`!`!count = 3`!`!dist = {0, 4, 12, 2147483647, 2147483647, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, false, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 8`!`!u = 6`!`!count = 3`!`!dist = {0, 4, 12, 2147483647, 2147483647, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, false, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 67, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:67`!`!67	                                       &amp;&amp; dist[u]+graph[u][v] &lt; dist[v])`!`!v = 8`!`!u = 6`!`!count = 3`!`!dist = {0, 4, 12, 2147483647, 2147483647, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, false, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 52, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:55`!`!55	       int u = minDistance(dist, sptSet);`!`!u = 6`!`!count = 4`!`!dist = {0, 4, 12, 2147483647, 2147483647, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, false, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 1, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:16`!`!16	   int min = INT_MAX, min_index;`!`!min = 9`!`!min_index = 6`!`!@@@@@@#####`!`!Breakpoint 17, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:18`!`!18	   for (int v = 0; v &lt; V; v++)`!`!v = 9`!`!min = 2147483647`!`!min_index = 6`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 0`!`!min = 2147483647`!`!min_index = 6`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 1`!`!min = 2147483647`!`!min_index = 6`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 2`!`!min = 2147483647`!`!min_index = 6`!`!@@@@@@#####`!`!Breakpoint 20, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:20`!`!20	         min = dist[v], min_index = v;`!`!v = 2`!`!min = 2147483647`!`!min_index = 6`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 3`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 4`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 5`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 20, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:20`!`!20	         min = dist[v], min_index = v;`!`!v = 5`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 6`!`!min = 11`!`!min_index = 5`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 7`!`!min = 11`!`!min_index = 5`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 8`!`!min = 11`!`!min_index = 5`!`!@@@@@@#####`!`!Breakpoint 21, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:22`!`!22	   return min_index;`!`!min = 11`!`!min_index = 5`!`!@@@@@@#####`!`!Breakpoint 23, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:23`!`!23	}`!`!min = 11`!`!min_index = 5`!`!@@@@@@#####`!`!Breakpoint 56, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:58`!`!58	       sptSet[u] = true;`!`!u = 5`!`!count = 4`!`!dist = {0, 4, 12, 2147483647, 2147483647, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, false, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 59, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:61`!`!61	       for (int v = 0; v &lt; V; v++)`!`!v = 9`!`!u = 5`!`!count = 4`!`!dist = {0, 4, 12, 2147483647, 2147483647, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 0`!`!u = 5`!`!count = 4`!`!dist = {0, 4, 12, 2147483647, 2147483647, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 1`!`!u = 5`!`!count = 4`!`!dist = {0, 4, 12, 2147483647, 2147483647, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 2`!`!u = 5`!`!count = 4`!`!dist = {0, 4, 12, 2147483647, 2147483647, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 67, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:67`!`!67	                                       &amp;&amp; dist[u]+graph[u][v] &lt; dist[v])`!`!v = 2`!`!u = 5`!`!count = 4`!`!dist = {0, 4, 12, 2147483647, 2147483647, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 3`!`!u = 5`!`!count = 4`!`!dist = {0, 4, 12, 2147483647, 2147483647, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 67, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:67`!`!67	                                       &amp;&amp; dist[u]+graph[u][v] &lt; dist[v])`!`!v = 3`!`!u = 5`!`!count = 4`!`!dist = {0, 4, 12, 2147483647, 2147483647, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 68, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:68`!`!68	            dist[v] = dist[u] + graph[u][v];`!`!v = 3`!`!u = 5`!`!count = 4`!`!dist = {0, 4, 12, 2147483647, 2147483647, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 4`!`!u = 5`!`!count = 4`!`!dist = {0, 4, 12, 25, 2147483647, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 67, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:67`!`!67	                                       &amp;&amp; dist[u]+graph[u][v] &lt; dist[v])`!`!v = 4`!`!u = 5`!`!count = 4`!`!dist = {0, 4, 12, 25, 2147483647, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 68, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:68`!`!68	            dist[v] = dist[u] + graph[u][v];`!`!v = 4`!`!u = 5`!`!count = 4`!`!dist = {0, 4, 12, 25, 2147483647, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 5`!`!u = 5`!`!count = 4`!`!dist = {0, 4, 12, 25, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 6`!`!u = 5`!`!count = 4`!`!dist = {0, 4, 12, 25, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 7`!`!u = 5`!`!count = 4`!`!dist = {0, 4, 12, 25, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 8`!`!u = 5`!`!count = 4`!`!dist = {0, 4, 12, 25, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 52, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:55`!`!55	       int u = minDistance(dist, sptSet);`!`!u = 5`!`!count = 5`!`!dist = {0, 4, 12, 25, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 1, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:16`!`!16	   int min = INT_MAX, min_index;`!`!min = 11`!`!min_index = 5`!`!@@@@@@#####`!`!Breakpoint 17, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:18`!`!18	   for (int v = 0; v &lt; V; v++)`!`!v = 9`!`!min = 2147483647`!`!min_index = 5`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 0`!`!min = 2147483647`!`!min_index = 5`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 1`!`!min = 2147483647`!`!min_index = 5`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 2`!`!min = 2147483647`!`!min_index = 5`!`!@@@@@@#####`!`!Breakpoint 20, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:20`!`!20	         min = dist[v], min_index = v;`!`!v = 2`!`!min = 2147483647`!`!min_index = 5`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 3`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 4`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 5`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 6`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 7`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 8`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 21, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:22`!`!22	   return min_index;`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 23, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:23`!`!23	}`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 56, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:58`!`!58	       sptSet[u] = true;`!`!u = 2`!`!count = 5`!`!dist = {0, 4, 12, 25, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, false, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 59, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:61`!`!61	       for (int v = 0; v &lt; V; v++)`!`!v = 9`!`!u = 2`!`!count = 5`!`!dist = {0, 4, 12, 25, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, true, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 0`!`!u = 2`!`!count = 5`!`!dist = {0, 4, 12, 25, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, true, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 1`!`!u = 2`!`!count = 5`!`!dist = {0, 4, 12, 25, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, true, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 2`!`!u = 2`!`!count = 5`!`!dist = {0, 4, 12, 25, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, true, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 3`!`!u = 2`!`!count = 5`!`!dist = {0, 4, 12, 25, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, true, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 67, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:67`!`!67	                                       &amp;&amp; dist[u]+graph[u][v] &lt; dist[v])`!`!v = 3`!`!u = 2`!`!count = 5`!`!dist = {0, 4, 12, 25, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, true, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 68, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:68`!`!68	            dist[v] = dist[u] + graph[u][v];`!`!v = 3`!`!u = 2`!`!count = 5`!`!dist = {0, 4, 12, 25, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, true, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 4`!`!u = 2`!`!count = 5`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, true, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 5`!`!u = 2`!`!count = 5`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, true, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 6`!`!u = 2`!`!count = 5`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, true, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 7`!`!u = 2`!`!count = 5`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, true, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 8`!`!u = 2`!`!count = 5`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, true, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 67, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:67`!`!67	                                       &amp;&amp; dist[u]+graph[u][v] &lt; dist[v])`!`!v = 8`!`!u = 2`!`!count = 5`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, true, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 68, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:68`!`!68	            dist[v] = dist[u] + graph[u][v];`!`!v = 8`!`!u = 2`!`!count = 5`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 15}`!`!sptSet = {true, true, true, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 52, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:55`!`!55	       int u = minDistance(dist, sptSet);`!`!u = 2`!`!count = 6`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 1, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:16`!`!16	   int min = INT_MAX, min_index;`!`!min = 12`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 17, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:18`!`!18	   for (int v = 0; v &lt; V; v++)`!`!v = 9`!`!min = 2147483647`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 0`!`!min = 2147483647`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 1`!`!min = 2147483647`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 2`!`!min = 2147483647`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 3`!`!min = 2147483647`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 20, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:20`!`!20	         min = dist[v], min_index = v;`!`!v = 3`!`!min = 2147483647`!`!min_index = 2`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 4`!`!min = 19`!`!min_index = 3`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 5`!`!min = 19`!`!min_index = 3`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 6`!`!min = 19`!`!min_index = 3`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 7`!`!min = 19`!`!min_index = 3`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 8`!`!min = 19`!`!min_index = 3`!`!@@@@@@#####`!`!Breakpoint 20, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:20`!`!20	         min = dist[v], min_index = v;`!`!v = 8`!`!min = 19`!`!min_index = 3`!`!@@@@@@#####`!`!Breakpoint 21, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:22`!`!22	   return min_index;`!`!min = 14`!`!min_index = 8`!`!@@@@@@#####`!`!Breakpoint 23, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:23`!`!23	}`!`!min = 14`!`!min_index = 8`!`!@@@@@@#####`!`!Breakpoint 56, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:58`!`!58	       sptSet[u] = true;`!`!u = 8`!`!count = 6`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, false, false, true, true, true, false}`!`!@@@@@@#####`!`!Breakpoint 59, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:61`!`!61	       for (int v = 0; v &lt; V; v++)`!`!v = 9`!`!u = 8`!`!count = 6`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, false, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 0`!`!u = 8`!`!count = 6`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, false, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 1`!`!u = 8`!`!count = 6`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, false, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 2`!`!u = 8`!`!count = 6`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, false, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 3`!`!u = 8`!`!count = 6`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, false, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 4`!`!u = 8`!`!count = 6`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, false, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 5`!`!u = 8`!`!count = 6`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, false, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 6`!`!u = 8`!`!count = 6`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, false, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 7`!`!u = 8`!`!count = 6`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, false, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 8`!`!u = 8`!`!count = 6`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, false, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 52, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:55`!`!55	       int u = minDistance(dist, sptSet);`!`!u = 8`!`!count = 7`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, false, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 1, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:16`!`!16	   int min = INT_MAX, min_index;`!`!min = 14`!`!min_index = 8`!`!@@@@@@#####`!`!Breakpoint 17, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:18`!`!18	   for (int v = 0; v &lt; V; v++)`!`!v = 9`!`!min = 2147483647`!`!min_index = 8`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 0`!`!min = 2147483647`!`!min_index = 8`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 1`!`!min = 2147483647`!`!min_index = 8`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 2`!`!min = 2147483647`!`!min_index = 8`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 3`!`!min = 2147483647`!`!min_index = 8`!`!@@@@@@#####`!`!Breakpoint 20, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:20`!`!20	         min = dist[v], min_index = v;`!`!v = 3`!`!min = 2147483647`!`!min_index = 8`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 4`!`!min = 19`!`!min_index = 3`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 5`!`!min = 19`!`!min_index = 3`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 6`!`!min = 19`!`!min_index = 3`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 7`!`!min = 19`!`!min_index = 3`!`!@@@@@@#####`!`!Breakpoint 19, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:19`!`!19	     if (sptSet[v] == false &amp;&amp; dist[v] &lt;= min)`!`!v = 8`!`!min = 19`!`!min_index = 3`!`!@@@@@@#####`!`!Breakpoint 21, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:22`!`!22	   return min_index;`!`!min = 19`!`!min_index = 3`!`!@@@@@@#####`!`!Breakpoint 23, minDistance (dist=0x7fffffffe270, sptSet=0x7fffffffe267) at h.cpp:23`!`!23	}`!`!min = 19`!`!min_index = 3`!`!@@@@@@#####`!`!Breakpoint 56, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:58`!`!58	       sptSet[u] = true;`!`!u = 3`!`!count = 7`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, false, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 59, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:61`!`!61	       for (int v = 0; v &lt; V; v++)`!`!v = 9`!`!u = 3`!`!count = 7`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, true, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 0`!`!u = 3`!`!count = 7`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, true, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 1`!`!u = 3`!`!count = 7`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, true, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 2`!`!u = 3`!`!count = 7`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, true, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 3`!`!u = 3`!`!count = 7`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, true, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 4`!`!u = 3`!`!count = 7`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, true, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 67, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:67`!`!67	                                       &amp;&amp; dist[u]+graph[u][v] &lt; dist[v])`!`!v = 4`!`!u = 3`!`!count = 7`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, true, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 5`!`!u = 3`!`!count = 7`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, true, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 6`!`!u = 3`!`!count = 7`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, true, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 7`!`!u = 3`!`!count = 7`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, true, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 62, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:66`!`!66	         if (!sptSet[v] &amp;&amp; graph[u][v] &amp;&amp; dist[u] != INT_MAX`!`!v = 8`!`!u = 3`!`!count = 7`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, true, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 69, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:72`!`!72	     printSolution(dist, V);`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, true, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 24, printSolution (dist=0x7fffffffe270, n=9) at h.cpp:28`!`!28	   printf("Vertex   Distance from Source\n");`!`!No locals.`!`!@@@@@@#####`!`!Breakpoint 29, printSolution (dist=0x7fffffffe270, n=9) at h.cpp:29`!`!29	   for (int i = 0; i &lt; V; i++)`!`!i = 9`!`!@@@@@@#####`!`!Breakpoint 30, printSolution (dist=0x7fffffffe270, n=9) at h.cpp:30`!`!30	      printf("%d tt %d\n", i, dist[i]);`!`!i = 0`!`!@@@@@@#####`!`!Breakpoint 30, printSolution (dist=0x7fffffffe270, n=9) at h.cpp:30`!`!30	      printf("%d tt %d\n", i, dist[i]);`!`!i = 1`!`!@@@@@@#####`!`!Breakpoint 30, printSolution (dist=0x7fffffffe270, n=9) at h.cpp:30`!`!30	      printf("%d tt %d\n", i, dist[i]);`!`!i = 2`!`!@@@@@@#####`!`!Breakpoint 30, printSolution (dist=0x7fffffffe270, n=9) at h.cpp:30`!`!30	      printf("%d tt %d\n", i, dist[i]);`!`!i = 3`!`!@@@@@@#####`!`!Breakpoint 30, printSolution (dist=0x7fffffffe270, n=9) at h.cpp:30`!`!30	      printf("%d tt %d\n", i, dist[i]);`!`!i = 4`!`!@@@@@@#####`!`!Breakpoint 30, printSolution (dist=0x7fffffffe270, n=9) at h.cpp:30`!`!30	      printf("%d tt %d\n", i, dist[i]);`!`!i = 5`!`!@@@@@@#####`!`!Breakpoint 30, printSolution (dist=0x7fffffffe270, n=9) at h.cpp:30`!`!30	      printf("%d tt %d\n", i, dist[i]);`!`!i = 6`!`!@@@@@@#####`!`!Breakpoint 30, printSolution (dist=0x7fffffffe270, n=9) at h.cpp:30`!`!30	      printf("%d tt %d\n", i, dist[i]);`!`!i = 7`!`!@@@@@@#####`!`!Breakpoint 30, printSolution (dist=0x7fffffffe270, n=9) at h.cpp:30`!`!30	      printf("%d tt %d\n", i, dist[i]);`!`!i = 8`!`!@@@@@@#####`!`!Breakpoint 31, printSolution (dist=0x7fffffffe270, n=9) at h.cpp:31`!`!31	}`!`!No locals.`!`!@@@@@@#####`!`!Breakpoint 73, dijkstra (graph=0x7fffffffe2b0, src=0) at h.cpp:73`!`!73	}`!`!dist = {0, 4, 12, 19, 21, 11, 9, 8, 14}`!`!sptSet = {true, true, true, true, false, true, true, true, true}`!`!@@@@@@#####`!`!Breakpoint 91, main () at h.cpp:92`!`!92	    return 0;`!`!graph = {{0, 4, 0, 0, 0, 0, 0, 8, 0}, {4, 0, 8, 0, 0, 0, 0, 11, 0}, {0, 8, 0, 7, 0, 4, 0, 0, 2}, {0, 0, 7, 0, 9, 14, 0, 0, 0}, {0, 0, 0, 9, 0, 10, 0, 0, 0}, {0, 0, 4, 14, 10, 0, 2, 0, 0}, {0, 0, 0, 0, 0, 2, 0, 1, 6}, {8, 11, 0, 0, 0, 0, 1, 0, 7}, {0, 0, 2, 0, 0, 0, 6, 7, 0}}`!`!Vertex   Distance from Source`!`!0 tt 0`!`!1 tt 4`!`!2 tt 12`!`!3 tt 19`!`!4 tt 21`!`!5 tt 11`!`!6 tt 9`!`!7 tt 8`!`!8 tt 14`!`![Inferior 1 (process 4905) exited normally]`!`!ttttttttttppppptype = int [9][9]`!`!type = int [9][9]`!`!type = int [9][9]`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int [9]`!`!type = bool [9]`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int`!`!type = int [9]`!`!type = bool [9]`!`!type = int [9][9]`!`!
 </limits.h>
</stdio.h>
